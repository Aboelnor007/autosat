//
// Model of Moran processes, with three alleles A, B, C with fairness.
//

// initial: words of length >= 1
I0 {
  init: s0;

  s0 -> s1p A;
  s0 -> s1p B;
  s0 -> s1p C;

  s1p -> s1 delim;

  s1 -> s1p A;
  s1 -> s1p B;
  s1 -> s1p C;

  accepting: s1;
}

closedUnderTransitions;

// final: configurations with only A, B, or C alleles
F {
  init: s0;

  s0 -> sap A;
  sa -> sap A;

  sap -> sa delim;

  s0 -> sbp B;
  sb -> sbp B;

  sbp -> sb delim;

  s0 -> scp C;
  sc -> scp C;

  scp -> sc delim;

  accepting: sa, sb, sc;
}

// everything is enabled
Enabled {
  init: s1;

  s1p -> s1 enabled;

  s1 -> s1p A;
  s1 -> s1p B;
  s1 -> s1p C;

  accepting: s1;
}

// Process: copy type to one of the neighbours
P2 {
  init: s0;

  s0 -> s0p A/A;
  s0 -> s0p B/B;
  s0 -> s0p C/C;

  s0p -> s0 delim/delim;

  // copy left
  s0 -> s1ap A/A;
  s0 -> s1ap B/A;
  s0 -> s1ap C/A;
  s0 -> s1ap B/B;
  s0 -> s1ap C/C;

  s0 -> s1bp A/B;
  s0 -> s1bp B/B;
  s0 -> s1bp C/B;
  s0 -> s1bp A/A;
  s0 -> s1bp C/C;

  s0 -> s1cp A/C;
  s0 -> s1cp B/C;
  s0 -> s1cp C/C;
  s0 -> s1cp A/A;
  s0 -> s1cp B/B;

  s1ap -> s1a chosen/delim;
  s1bp -> s1b chosen/delim;
  s1cp -> s1c chosen/delim;

  s1a -> s10p A/A;  
  s1b -> s10p B/B;
  s1c -> s10p C/C;

  s10p -> sf delim/delim;

  // copy right
  s0 -> s2ap A/A;
  s0 -> s2bp B/B;
  s0 -> s2cp C/C;

  s2ap -> s2a delim/delim;
  s2bp -> s2b delim/delim;
  s2cp -> s2c delim/delim;

  s2a -> sfpc A/A;
  s2a -> sfpc B/A;
  s2a -> sfpc C/A;
  s2a -> sfpc B/B;
  s2a -> sfpc C/C;

  sfpc -> sf chosen/delim;

  s2b -> sfpc A/B;
  s2b -> sfpc B/B;
  s2b -> sfpc C/B;
  s2b -> sfpc A/A;
  s2b -> sfpc C/C;

  s2c -> sfpc A/C;
  s2c -> sfpc B/C;
  s2c -> sfpc C/C;
  s2c -> sfpc A/A;
  s2c -> sfpc B/B;

  sf -> sfp A/A;
  sf -> sfp B/B;
  sf -> sfp C/C;

  sfp -> sf delim/delim;

  accepting: sf;
}

transducerStateGuessing: 1 .. 5;
automatonStateGuessing: 0 .. 4;

// monolithicWitness;

noPrecomputedInvariant;
// useRankingFunctions;

logLevel: 1;
parallel: 1;

// explicitChecksUntilLength: 20;
