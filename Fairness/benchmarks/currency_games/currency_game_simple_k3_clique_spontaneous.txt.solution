generalIntersection: warning: ignoring epsilon transitions
generalIntersection: warning: ignoring epsilon transitions
union: check whether the automata are disjoint first!
union: check whether the automata are disjoint first!
union: check whether the automata are disjoint first!
Verifying system instance for length 0 ... 
Verifying system instance for length 1 ... 
Verifying system instance for length 2 ... 
Verifying system instance for length 3 ... 
Verifying system instance for length 4 ... 
Verifying system instance for length 5 ... 
Verifying system instance for length 6 ... 
Verifying system instance for length 7 ... 
Verifying system instance for length 8 ... 
Verifying system instance for length 9 ... 
Verifying system instance for length 10 ... 
Verifying system instance for length 11 ... 
Verifying system instance for length 12 ... 
Verifying system instance for length 13 ... 
Verifying system instance for length 14 ... 
Verifying system instance for length 15 ... 
Verifying system instance for length 16 ... 
Verifying system instance for length 17 ... 
Verifying system instance for length 18 ... 
Verifying system instance for length 19 ... 
Verifying system instance for length 20 ... 
07:27:38.219 [main] INFO  verification.LStarInvariantSynth - Using L* to infer system invariant
07:27:45.501 [main] INFO  verification.LStarInvariantSynth - FOUND SOLUTION!
07:27:45.501 [main] INFO  verification.IncrementalVerifier - Constructing disjunctive advice bits
07:27:45.501 [main] INFO  verification.IncrementalVerifier - all reachable configurations up to length 3 are covered
07:27:45.503 [main] INFO  verification.IncrementalVerifier - now checking configurations up to length 12
07:27:50.214 [main] INFO  verification.IncrementalVerifier - found (Bi, Ti) pair: # transducer states: 2, # automaton states: 2
07:27:50.214 [main] INFO  verification.IncrementalVerifier - extending winning set, now have 1 (Bi, Ti) pairs
07:27:50.214 [main] INFO  verification.IncrementalVerifier - storing 1 progress relations for reuse
07:27:52.296 [main] INFO  verification.IncrementalVerifier - found (Bi, Ti) pair: # transducer states: 2, # automaton states: 2
07:27:52.297 [main] INFO  verification.IncrementalVerifier - extending winning set, now have 2 (Bi, Ti) pairs
07:27:52.297 [main] INFO  verification.IncrementalVerifier - storing 2 progress relations for reuse
07:28:09.892 [main] INFO  verification.IncrementalVerifier - found (Bi, Ti) pair: # transducer states: 3, # automaton states: 1
07:28:09.892 [main] INFO  verification.IncrementalVerifier - extending winning set, now have 3 (Bi, Ti) pairs
07:28:09.893 [main] INFO  verification.IncrementalVerifier - storing 3 progress relations for reuse
07:28:09.893 [main] INFO  verification.IncrementalVerifier - all reachable configurations up to length 12 are covered
07:28:09.896 [main] INFO  verification.IncrementalVerifier - FINISHED
VERDICT: Player 2 can win from every reachable configuration

// Approximation of reachable states
A {
  init: s49;
  s0 -> s0 0;
  s0 -> s0 1;
  s0 -> s0 G;
  s0 -> s0 S;
  s1 -> s2 0;
  s1 -> s0 1;
  s1 -> s0 G;
  s1 -> s0 S;
  s2 -> s2 0;
  s2 -> s0 1;
  s2 -> s3 G;
  s2 -> s39 S;
  s3 -> s7 0;
  s3 -> s3 1;
  s3 -> s0 G;
  s3 -> s0 S;
  s4 -> s14 0;
  s4 -> s5 1;
  s4 -> s0 G;
  s4 -> s0 S;
  s5 -> s15 0;
  s5 -> s5 1;
  s5 -> s0 G;
  s5 -> s0 S;
  s6 -> s132 0;
  s6 -> s9 1;
  s6 -> s0 G;
  s6 -> s0 S;
  s7 -> s8 0;
  s7 -> s0 1;
  s7 -> s0 G;
  s7 -> s0 S;
  s8 -> s8 0;
  s8 -> s0 1;
  s8 -> s3 G;
  s8 -> s48 S;
  s9 -> s135 0;
  s9 -> s9 1;
  s9 -> s0 G;
  s9 -> s0 S;
  s10 -> s16 0;
  s10 -> s0 1;
  s10 -> s0 G;
  s10 -> s0 S;
  s11 -> s17 0;
  s11 -> s0 1;
  s11 -> s0 G;
  s11 -> s0 S;
  s12 -> s18 0;
  s12 -> s0 1;
  s12 -> s0 G;
  s12 -> s0 S;
  s13 -> s19 0;
  s13 -> s0 1;
  s13 -> s0 G;
  s13 -> s0 S;
  s14 -> s20 0;
  s14 -> s0 1;
  s14 -> s0 G;
  s14 -> s0 S;
  s15 -> s20 0;
  s15 -> s0 1;
  s15 -> s3 G;
  s15 -> s39 S;
  s16 -> s16 0;
  s16 -> s0 1;
  s16 -> s21 G;
  s16 -> s23 S;
  s17 -> s17 0;
  s17 -> s0 1;
  s17 -> s22 G;
  s17 -> s26 S;
  s18 -> s18 0;
  s18 -> s0 1;
  s18 -> s24 G;
  s18 -> s4 S;
  s19 -> s19 0;
  s19 -> s0 1;
  s19 -> s25 G;
  s19 -> s6 S;
  s20 -> s20 0;
  s20 -> s0 1;
  s20 -> s27 G;
  s20 -> s27 S;
  s21 -> s14 0;
  s21 -> s29 1;
  s21 -> s0 G;
  s21 -> s0 S;
  s22 -> s132 0;
  s22 -> s41 1;
  s22 -> s0 G;
  s22 -> s0 S;
  s23 -> s11 0;
  s23 -> s31 1;
  s23 -> s0 G;
  s23 -> s0 S;
  s24 -> s13 0;
  s24 -> s32 1;
  s24 -> s0 G;
  s24 -> s0 S;
  s25 -> s129 0;
  s25 -> s44 1;
  s25 -> s0 G;
  s25 -> s0 S;
  s26 -> s54 0;
  s26 -> s43 1;
  s26 -> s0 G;
  s26 -> s0 S;
  s27 -> s132 0;
  s27 -> s45 1;
  s27 -> s0 G;
  s27 -> s0 S;
  s28 -> s34 0;
  s28 -> s0 1;
  s28 -> s0 G;
  s28 -> s0 S;
  s29 -> s33 0;
  s29 -> s29 1;
  s29 -> s0 G;
  s29 -> s0 S;
  s30 -> s37 0;
  s30 -> s0 1;
  s30 -> s0 G;
  s30 -> s0 S;
  s31 -> s35 0;
  s31 -> s31 1;
  s31 -> s0 G;
  s31 -> s0 S;
  s32 -> s36 0;
  s32 -> s32 1;
  s32 -> s0 G;
  s32 -> s0 S;
  s33 -> s20 0;
  s33 -> s0 1;
  s33 -> s39 G;
  s33 -> s38 S;
  s34 -> s34 0;
  s34 -> s0 1;
  s34 -> s39 G;
  s34 -> s38 S;
  s35 -> s17 0;
  s35 -> s0 1;
  s35 -> s39 G;
  s35 -> s39 S;
  s36 -> s19 0;
  s36 -> s0 1;
  s36 -> s39 G;
  s36 -> s39 S;
  s37 -> s37 0;
  s37 -> s0 1;
  s37 -> s39 G;
  s37 -> s39 S;
  s38 -> s40 0;
  s38 -> s38 1;
  s38 -> s0 G;
  s38 -> s0 S;
  s39 -> s42 0;
  s39 -> s39 1;
  s39 -> s0 G;
  s39 -> s0 S;
  s40 -> s46 0;
  s40 -> s0 1;
  s40 -> s0 G;
  s40 -> s0 S;
  s41 -> s133 0;
  s41 -> s41 1;
  s41 -> s0 G;
  s41 -> s0 S;
  s42 -> s47 0;
  s42 -> s0 1;
  s42 -> s0 G;
  s42 -> s0 S;
  s43 -> s55 0;
  s43 -> s43 1;
  s43 -> s0 G;
  s43 -> s0 S;
  s44 -> s130 0;
  s44 -> s44 1;
  s44 -> s0 G;
  s44 -> s0 S;
  s45 -> s136 0;
  s45 -> s45 1;
  s45 -> s0 G;
  s45 -> s0 S;
  s46 -> s46 0;
  s46 -> s0 1;
  s46 -> s48 G;
  s46 -> s38 S;
  s47 -> s47 0;
  s47 -> s0 1;
  s47 -> s48 G;
  s47 -> s48 S;
  s48 -> s198 0;
  s48 -> s48 1;
  s48 -> s0 G;
  s48 -> s0 S;
  s49 -> s0 0;
  s49 -> s0 1;
  s49 -> s60 G;
  s49 -> s59 S;
  s50 -> s0 0;
  s50 -> s51 1;
  s50 -> s0 G;
  s50 -> s0 S;
  s51 -> s52 0;
  s51 -> s51 1;
  s51 -> s0 G;
  s51 -> s0 S;
  s52 -> s52 0;
  s52 -> s0 1;
  s52 -> s53 G;
  s52 -> s115 S;
  s53 -> s0 0;
  s53 -> s56 1;
  s53 -> s0 G;
  s53 -> s0 S;
  s54 -> s57 0;
  s54 -> s0 1;
  s54 -> s0 G;
  s54 -> s0 S;
  s55 -> s57 0;
  s55 -> s0 1;
  s55 -> s48 G;
  s55 -> s48 S;
  s56 -> s58 0;
  s56 -> s56 1;
  s56 -> s0 G;
  s56 -> s0 S;
  s57 -> s57 0;
  s57 -> s0 1;
  s57 -> s22 G;
  s57 -> s184 S;
  s58 -> s58 0;
  s58 -> s0 1;
  s58 -> s53 G;
  s58 -> s185 S;
  s59 -> s10 0;
  s59 -> s61 1;
  s59 -> s0 G;
  s59 -> s0 S;
  s60 -> s12 0;
  s60 -> s62 1;
  s60 -> s0 G;
  s60 -> s0 S;
  s61 -> s64 0;
  s61 -> s66 1;
  s61 -> s0 G;
  s61 -> s0 S;
  s62 -> s68 0;
  s62 -> s63 1;
  s62 -> s0 G;
  s62 -> s0 S;
  s63 -> s68 0;
  s63 -> s63 1;
  s63 -> s50 G;
  s63 -> s70 S;
  s64 -> s65 0;
  s64 -> s0 1;
  s64 -> s75 G;
  s64 -> s71 S;
  s65 -> s65 0;
  s65 -> s0 1;
  s65 -> s77 G;
  s65 -> s72 S;
  s66 -> s64 0;
  s66 -> s66 1;
  s66 -> s70 G;
  s66 -> s69 S;
  s67 -> s67 0;
  s67 -> s0 1;
  s67 -> s73 G;
  s67 -> s76 S;
  s68 -> s67 0;
  s68 -> s0 1;
  s68 -> s74 G;
  s68 -> s78 S;
  s69 -> s0 0;
  s69 -> s79 1;
  s69 -> s0 G;
  s69 -> s0 S;
  s70 -> s0 0;
  s70 -> s80 1;
  s70 -> s0 G;
  s70 -> s0 S;
  s71 -> s30 0;
  s71 -> s81 1;
  s71 -> s0 G;
  s71 -> s0 S;
  s72 -> s11 0;
  s72 -> s82 1;
  s72 -> s0 G;
  s72 -> s0 S;
  s73 -> s13 0;
  s73 -> s84 1;
  s73 -> s0 G;
  s73 -> s0 S;
  s74 -> s30 0;
  s74 -> s83 1;
  s74 -> s0 G;
  s74 -> s0 S;
  s75 -> s1 0;
  s75 -> s85 1;
  s75 -> s0 G;
  s75 -> s0 S;
  s76 -> s14 0;
  s76 -> s87 1;
  s76 -> s0 G;
  s76 -> s0 S;
  s77 -> s14 0;
  s77 -> s88 1;
  s77 -> s0 G;
  s77 -> s0 S;
  s78 -> s28 0;
  s78 -> s86 1;
  s78 -> s0 G;
  s78 -> s0 S;
  s79 -> s91 0;
  s79 -> s79 1;
  s79 -> s0 G;
  s79 -> s0 S;
  s80 -> s94 0;
  s80 -> s80 1;
  s80 -> s0 G;
  s80 -> s0 S;
  s81 -> s99 0;
  s81 -> s92 1;
  s81 -> s0 G;
  s81 -> s0 S;
  s82 -> s101 0;
  s82 -> s93 1;
  s82 -> s0 G;
  s82 -> s0 S;
  s83 -> s103 0;
  s83 -> s89 1;
  s83 -> s0 G;
  s83 -> s0 S;
  s84 -> s105 0;
  s84 -> s90 1;
  s84 -> s0 G;
  s84 -> s0 S;
  s85 -> s107 0;
  s85 -> s95 1;
  s85 -> s0 G;
  s85 -> s0 S;
  s86 -> s108 0;
  s86 -> s96 1;
  s86 -> s0 G;
  s86 -> s0 S;
  s87 -> s110 0;
  s87 -> s97 1;
  s87 -> s0 G;
  s87 -> s0 S;
  s88 -> s112 0;
  s88 -> s98 1;
  s88 -> s0 G;
  s88 -> s0 S;
  s89 -> s103 0;
  s89 -> s89 1;
  s89 -> s53 G;
  s89 -> s115 S;
  s90 -> s105 0;
  s90 -> s90 1;
  s90 -> s53 G;
  s90 -> s115 S;
  s91 -> s91 0;
  s91 -> s0 1;
  s91 -> s115 G;
  s91 -> s114 S;
  s92 -> s99 0;
  s92 -> s92 1;
  s92 -> s115 G;
  s92 -> s114 S;
  s93 -> s101 0;
  s93 -> s93 1;
  s93 -> s115 G;
  s93 -> s114 S;
  s94 -> s94 0;
  s94 -> s0 1;
  s94 -> s115 G;
  s94 -> s115 S;
  s95 -> s107 0;
  s95 -> s95 1;
  s95 -> s115 G;
  s95 -> s115 S;
  s96 -> s108 0;
  s96 -> s96 1;
  s96 -> s115 G;
  s96 -> s115 S;
  s97 -> s110 0;
  s97 -> s97 1;
  s97 -> s115 G;
  s97 -> s115 S;
  s98 -> s112 0;
  s98 -> s98 1;
  s98 -> s115 G;
  s98 -> s115 S;
  s99 -> s102 0;
  s99 -> s0 1;
  s99 -> s122 G;
  s99 -> s116 S;
  s100 -> s100 0;
  s100 -> s0 1;
  s100 -> s123 G;
  s100 -> s117 S;
  s101 -> s100 0;
  s101 -> s0 1;
  s101 -> s128 G;
  s101 -> s118 S;
  s102 -> s102 0;
  s102 -> s0 1;
  s102 -> s128 G;
  s102 -> s118 S;
  s103 -> s106 0;
  s103 -> s0 1;
  s103 -> s119 G;
  s103 -> s122 S;
  s104 -> s104 0;
  s104 -> s0 1;
  s104 -> s120 G;
  s104 -> s124 S;
  s105 -> s104 0;
  s105 -> s0 1;
  s105 -> s121 G;
  s105 -> s128 S;
  s106 -> s106 0;
  s106 -> s0 1;
  s106 -> s121 G;
  s106 -> s128 S;
  s107 -> s111 0;
  s107 -> s0 1;
  s107 -> s122 G;
  s107 -> s122 S;
  s108 -> s113 0;
  s108 -> s0 1;
  s108 -> s122 G;
  s108 -> s122 S;
  s109 -> s109 0;
  s109 -> s0 1;
  s109 -> s125 G;
  s109 -> s125 S;
  s110 -> s109 0;
  s110 -> s0 1;
  s110 -> s126 G;
  s110 -> s128 S;
  s111 -> s111 0;
  s111 -> s0 1;
  s111 -> s126 G;
  s111 -> s128 S;
  s112 -> s109 0;
  s112 -> s0 1;
  s112 -> s128 G;
  s112 -> s127 S;
  s113 -> s113 0;
  s113 -> s0 1;
  s113 -> s128 G;
  s113 -> s127 S;
  s114 -> s0 0;
  s114 -> s131 1;
  s114 -> s0 G;
  s114 -> s0 S;
  s115 -> s0 0;
  s115 -> s134 1;
  s115 -> s0 G;
  s115 -> s0 S;
  s116 -> s0 0;
  s116 -> s137 1;
  s116 -> s0 G;
  s116 -> s0 S;
  s117 -> s54 0;
  s117 -> s138 1;
  s117 -> s0 G;
  s117 -> s0 S;
  s118 -> s42 0;
  s118 -> s139 1;
  s118 -> s0 G;
  s118 -> s0 S;
  s119 -> s0 0;
  s119 -> s140 1;
  s119 -> s0 G;
  s119 -> s0 S;
  s120 -> s129 0;
  s120 -> s141 1;
  s120 -> s0 G;
  s120 -> s0 S;
  s121 -> s42 0;
  s121 -> s142 1;
  s121 -> s0 G;
  s121 -> s0 S;
  s122 -> s0 0;
  s122 -> s143 1;
  s122 -> s0 G;
  s122 -> s0 S;
  s123 -> s132 0;
  s123 -> s144 1;
  s123 -> s0 G;
  s123 -> s0 S;
  s124 -> s132 0;
  s124 -> s146 1;
  s124 -> s0 G;
  s124 -> s0 S;
  s125 -> s132 0;
  s125 -> s147 1;
  s125 -> s0 G;
  s125 -> s0 S;
  s126 -> s7 0;
  s126 -> s145 1;
  s126 -> s0 G;
  s126 -> s0 S;
  s127 -> s40 0;
  s127 -> s148 1;
  s127 -> s0 G;
  s127 -> s0 S;
  s128 -> s42 0;
  s128 -> s148 1;
  s128 -> s0 G;
  s128 -> s0 S;
  s129 -> s152 0;
  s129 -> s0 1;
  s129 -> s0 G;
  s129 -> s0 S;
  s130 -> s152 0;
  s130 -> s0 1;
  s130 -> s48 G;
  s130 -> s48 S;
  s131 -> s153 0;
  s131 -> s131 1;
  s131 -> s0 G;
  s131 -> s0 S;
  s132 -> s157 0;
  s132 -> s0 1;
  s132 -> s0 G;
  s132 -> s0 S;
  s133 -> s157 0;
  s133 -> s0 1;
  s133 -> s48 G;
  s133 -> s38 S;
  s134 -> s158 0;
  s134 -> s134 1;
  s134 -> s0 G;
  s134 -> s0 S;
  s135 -> s157 0;
  s135 -> s0 1;
  s135 -> s3 G;
  s135 -> s48 S;
  s136 -> s157 0;
  s136 -> s0 1;
  s136 -> s48 G;
  s136 -> s48 S;
  s137 -> s165 0;
  s137 -> s154 1;
  s137 -> s0 G;
  s137 -> s0 S;
  s138 -> s168 0;
  s138 -> s155 1;
  s138 -> s0 G;
  s138 -> s0 S;
  s139 -> s167 0;
  s139 -> s156 1;
  s139 -> s0 G;
  s139 -> s0 S;
  s140 -> s170 0;
  s140 -> s149 1;
  s140 -> s0 G;
  s140 -> s0 S;
  s141 -> s173 0;
  s141 -> s150 1;
  s141 -> s0 G;
  s141 -> s0 S;
  s142 -> s172 0;
  s142 -> s151 1;
  s142 -> s0 G;
  s142 -> s0 S;
  s143 -> s175 0;
  s143 -> s159 1;
  s143 -> s0 G;
  s143 -> s0 S;
  s144 -> s181 0;
  s144 -> s160 1;
  s144 -> s0 G;
  s144 -> s0 S;
  s145 -> s177 0;
  s145 -> s161 1;
  s145 -> s0 G;
  s145 -> s0 S;
  s146 -> s178 0;
  s146 -> s162 1;
  s146 -> s0 G;
  s146 -> s0 S;
  s147 -> s181 0;
  s147 -> s163 1;
  s147 -> s0 G;
  s147 -> s0 S;
  s148 -> s180 0;
  s148 -> s164 1;
  s148 -> s0 G;
  s148 -> s0 S;
  s149 -> s170 0;
  s149 -> s149 1;
  s149 -> s53 G;
  s149 -> s185 S;
  s150 -> s173 0;
  s150 -> s150 1;
  s150 -> s53 G;
  s150 -> s185 S;
  s151 -> s172 0;
  s151 -> s151 1;
  s151 -> s53 G;
  s151 -> s185 S;
  s152 -> s152 0;
  s152 -> s0 1;
  s152 -> s183 G;
  s152 -> s6 S;
  s153 -> s153 0;
  s153 -> s0 1;
  s153 -> s185 G;
  s153 -> s114 S;
  s154 -> s165 0;
  s154 -> s154 1;
  s154 -> s185 G;
  s154 -> s114 S;
  s155 -> s168 0;
  s155 -> s155 1;
  s155 -> s185 G;
  s155 -> s114 S;
  s156 -> s167 0;
  s156 -> s156 1;
  s156 -> s185 G;
  s156 -> s114 S;
  s157 -> s157 0;
  s157 -> s0 1;
  s157 -> s184 G;
  s157 -> s184 S;
  s158 -> s158 0;
  s158 -> s0 1;
  s158 -> s185 G;
  s158 -> s185 S;
  s159 -> s175 0;
  s159 -> s159 1;
  s159 -> s185 G;
  s159 -> s185 S;
  s160 -> s181 0;
  s160 -> s160 1;
  s160 -> s185 G;
  s160 -> s185 S;
  s161 -> s177 0;
  s161 -> s161 1;
  s161 -> s185 G;
  s161 -> s185 S;
  s162 -> s178 0;
  s162 -> s162 1;
  s162 -> s185 G;
  s162 -> s185 S;
  s163 -> s181 0;
  s163 -> s163 1;
  s163 -> s185 G;
  s163 -> s185 S;
  s164 -> s180 0;
  s164 -> s164 1;
  s164 -> s185 G;
  s164 -> s185 S;
  s165 -> s165 0;
  s165 -> s0 1;
  s165 -> s192 G;
  s165 -> s186 S;
  s166 -> s166 0;
  s166 -> s0 1;
  s166 -> s193 G;
  s166 -> s187 S;
  s167 -> s169 0;
  s167 -> s0 1;
  s167 -> s192 G;
  s167 -> s186 S;
  s168 -> s166 0;
  s168 -> s0 1;
  s168 -> s197 G;
  s168 -> s188 S;
  s169 -> s169 0;
  s169 -> s0 1;
  s169 -> s197 G;
  s169 -> s188 S;
  s170 -> s170 0;
  s170 -> s0 1;
  s170 -> s189 G;
  s170 -> s192 S;
  s171 -> s171 0;
  s171 -> s0 1;
  s171 -> s190 G;
  s171 -> s194 S;
  s172 -> s174 0;
  s172 -> s0 1;
  s172 -> s189 G;
  s172 -> s192 S;
  s173 -> s171 0;
  s173 -> s0 1;
  s173 -> s191 G;
  s173 -> s197 S;
  s174 -> s174 0;
  s174 -> s0 1;
  s174 -> s191 G;
  s174 -> s197 S;
  s175 -> s175 0;
  s175 -> s0 1;
  s175 -> s192 G;
  s175 -> s192 S;
  s176 -> s176 0;
  s176 -> s0 1;
  s176 -> s195 G;
  s176 -> s195 S;
  s177 -> s179 0;
  s177 -> s0 1;
  s177 -> s192 G;
  s177 -> s192 S;
  s178 -> s176 0;
  s178 -> s0 1;
  s178 -> s196 G;
  s178 -> s197 S;
  s179 -> s179 0;
  s179 -> s0 1;
  s179 -> s196 G;
  s179 -> s197 S;
  s180 -> s182 0;
  s180 -> s0 1;
  s180 -> s192 G;
  s180 -> s192 S;
  s181 -> s176 0;
  s181 -> s0 1;
  s181 -> s197 G;
  s181 -> s197 S;
  s182 -> s182 0;
  s182 -> s0 1;
  s182 -> s197 G;
  s182 -> s197 S;
  s183 -> s129 0;
  s183 -> s199 1;
  s183 -> s0 G;
  s183 -> s0 S;
  s184 -> s132 0;
  s184 -> s200 1;
  s184 -> s0 G;
  s184 -> s0 S;
  s185 -> s0 0;
  s185 -> s201 1;
  s185 -> s0 G;
  s185 -> s0 S;
  s186 -> s0 0;
  s186 -> s202 1;
  s186 -> s0 G;
  s186 -> s0 S;
  s187 -> s54 0;
  s187 -> s203 1;
  s187 -> s0 G;
  s187 -> s0 S;
  s188 -> s198 0;
  s188 -> s204 1;
  s188 -> s0 G;
  s188 -> s0 S;
  s189 -> s0 0;
  s189 -> s208 1;
  s189 -> s0 G;
  s189 -> s0 S;
  s190 -> s129 0;
  s190 -> s209 1;
  s190 -> s0 G;
  s190 -> s0 S;
  s191 -> s198 0;
  s191 -> s210 1;
  s191 -> s0 G;
  s191 -> s0 S;
  s192 -> s0 0;
  s192 -> s214 1;
  s192 -> s0 G;
  s192 -> s0 S;
  s193 -> s132 0;
  s193 -> s215 1;
  s193 -> s0 G;
  s193 -> s0 S;
  s194 -> s132 0;
  s194 -> s217 1;
  s194 -> s0 G;
  s194 -> s0 S;
  s195 -> s132 0;
  s195 -> s218 1;
  s195 -> s0 G;
  s195 -> s0 S;
  s196 -> s7 0;
  s196 -> s216 1;
  s196 -> s0 G;
  s196 -> s0 S;
  s197 -> s198 0;
  s197 -> s219 1;
  s197 -> s0 G;
  s197 -> s0 S;
  s198 -> s222 0;
  s198 -> s0 1;
  s198 -> s0 G;
  s198 -> s0 S;
  s199 -> s220 0;
  s199 -> s199 1;
  s199 -> s0 G;
  s199 -> s0 S;
  s200 -> s221 0;
  s200 -> s200 1;
  s200 -> s0 G;
  s200 -> s0 S;
  s201 -> s223 0;
  s201 -> s201 1;
  s201 -> s0 G;
  s201 -> s0 S;
  s202 -> s224 0;
  s202 -> s205 1;
  s202 -> s0 G;
  s202 -> s0 S;
  s203 -> s227 0;
  s203 -> s206 1;
  s203 -> s0 G;
  s203 -> s0 S;
  s204 -> s226 0;
  s204 -> s207 1;
  s204 -> s0 G;
  s204 -> s0 S;
  s205 -> s224 0;
  s205 -> s205 1;
  s205 -> s185 G;
  s205 -> s114 S;
  s206 -> s227 0;
  s206 -> s206 1;
  s206 -> s185 G;
  s206 -> s114 S;
  s207 -> s226 0;
  s207 -> s207 1;
  s207 -> s185 G;
  s207 -> s114 S;
  s208 -> s229 0;
  s208 -> s211 1;
  s208 -> s0 G;
  s208 -> s0 S;
  s209 -> s232 0;
  s209 -> s213 1;
  s209 -> s0 G;
  s209 -> s0 S;
  s210 -> s231 0;
  s210 -> s212 1;
  s210 -> s0 G;
  s210 -> s0 S;
  s211 -> s229 0;
  s211 -> s211 1;
  s211 -> s53 G;
  s211 -> s185 S;
  s212 -> s231 0;
  s212 -> s212 1;
  s212 -> s53 G;
  s212 -> s185 S;
  s213 -> s232 0;
  s213 -> s213 1;
  s213 -> s53 G;
  s213 -> s185 S;
  s214 -> s234 0;
  s214 -> s242 1;
  s214 -> s0 G;
  s214 -> s0 S;
  s215 -> s240 0;
  s215 -> s243 1;
  s215 -> s0 G;
  s215 -> s0 S;
  s216 -> s236 0;
  s216 -> s244 1;
  s216 -> s0 G;
  s216 -> s0 S;
  s217 -> s237 0;
  s217 -> s245 1;
  s217 -> s0 G;
  s217 -> s0 S;
  s218 -> s240 0;
  s218 -> s246 1;
  s218 -> s0 G;
  s218 -> s0 S;
  s219 -> s239 0;
  s219 -> s247 1;
  s219 -> s0 G;
  s219 -> s0 S;
  s220 -> s152 0;
  s220 -> s0 1;
  s220 -> s48 G;
  s220 -> s48 S;
  s221 -> s157 0;
  s221 -> s0 1;
  s221 -> s48 G;
  s221 -> s48 S;
  s222 -> s222 0;
  s222 -> s0 1;
  s222 -> s48 G;
  s222 -> s48 S;
  s223 -> s223 0;
  s223 -> s0 1;
  s223 -> s185 G;
  s223 -> s185 S;
  s224 -> s224 0;
  s224 -> s0 1;
  s224 -> s192 G;
  s224 -> s186 S;
  s225 -> s225 0;
  s225 -> s0 1;
  s225 -> s193 G;
  s225 -> s187 S;
  s226 -> s228 0;
  s226 -> s0 1;
  s226 -> s192 G;
  s226 -> s186 S;
  s227 -> s225 0;
  s227 -> s0 1;
  s227 -> s197 G;
  s227 -> s188 S;
  s228 -> s228 0;
  s228 -> s0 1;
  s228 -> s197 G;
  s228 -> s188 S;
  s229 -> s229 0;
  s229 -> s0 1;
  s229 -> s189 G;
  s229 -> s192 S;
  s230 -> s230 0;
  s230 -> s0 1;
  s230 -> s190 G;
  s230 -> s194 S;
  s231 -> s233 0;
  s231 -> s0 1;
  s231 -> s189 G;
  s231 -> s192 S;
  s232 -> s230 0;
  s232 -> s0 1;
  s232 -> s191 G;
  s232 -> s197 S;
  s233 -> s233 0;
  s233 -> s0 1;
  s233 -> s191 G;
  s233 -> s197 S;
  s234 -> s234 0;
  s234 -> s0 1;
  s234 -> s192 G;
  s234 -> s192 S;
  s235 -> s235 0;
  s235 -> s0 1;
  s235 -> s195 G;
  s235 -> s195 S;
  s236 -> s238 0;
  s236 -> s0 1;
  s236 -> s192 G;
  s236 -> s192 S;
  s237 -> s235 0;
  s237 -> s0 1;
  s237 -> s196 G;
  s237 -> s197 S;
  s238 -> s238 0;
  s238 -> s0 1;
  s238 -> s196 G;
  s238 -> s197 S;
  s239 -> s241 0;
  s239 -> s0 1;
  s239 -> s192 G;
  s239 -> s192 S;
  s240 -> s235 0;
  s240 -> s0 1;
  s240 -> s197 G;
  s240 -> s197 S;
  s241 -> s241 0;
  s241 -> s0 1;
  s241 -> s197 G;
  s241 -> s197 S;
  s242 -> s234 0;
  s242 -> s242 1;
  s242 -> s185 G;
  s242 -> s185 S;
  s243 -> s240 0;
  s243 -> s243 1;
  s243 -> s185 G;
  s243 -> s185 S;
  s244 -> s236 0;
  s244 -> s244 1;
  s244 -> s185 G;
  s244 -> s185 S;
  s245 -> s237 0;
  s245 -> s245 1;
  s245 -> s185 G;
  s245 -> s185 S;
  s246 -> s240 0;
  s246 -> s246 1;
  s246 -> s185 G;
  s246 -> s185 S;
  s247 -> s239 0;
  s247 -> s247 1;
  s247 -> s185 G;
  s247 -> s185 S;
  accepting: s220, s221, s222, s223, s239, s238, s237, s236, s235, s234, s233, s232, s231, s230, s229, s228, s227, s226, s225, s224, s246, s247, s244, s245, s242, s243, s240, s241;
}

// States from which player 2 can move and win
W {
  init: s0;
  s0 -> s0 0;
  s0 -> s0 1;
  s0 -> s0 G;
  s0 -> s0 S;
  accepting: s0;
}

// Progress relations (all to be closed under rotation)
B0 {
  init: s0;
  s0 -> s0 1;
  s0 -> s1 G;
  s0 -> s1 S;
  s1 -> s1 0;
  s1 -> s1 1;
  s1 -> s1 S;
  accepting: s1;
}

T0 {
  init: s0;
  s0 -> s0 1/1;
  s0 -> s0 G/G;
  s0 -> s0 S/S;
  s0 -> s1 0/1;
  s0 -> s1 S/G;
  s1 -> s1 0/0;
  s1 -> s1 0/1;
  s1 -> s1 1/0;
  s1 -> s1 1/1;
  s1 -> s1 S/G;
  s1 -> s1 S/S;
  accepting: s1;
}

B1 {
  init: s0;
  s0 -> s1 1;
  s0 -> s0 G;
  s0 -> s1 S;
  s1 -> s1 0;
  s1 -> s1 1;
  s1 -> s1 G;
  accepting: s1;
}

T1 {
  init: s0;
  s0 -> s0 1/1;
  s0 -> s0 S/S;
  s0 -> s1 0/1;
  s0 -> s1 G/S;
  s1 -> s1 0/0;
  s1 -> s1 0/1;
  s1 -> s1 1/0;
  s1 -> s1 1/1;
  s1 -> s1 G/G;
  s1 -> s1 G/S;
  accepting: s1;
}

B2 {
  init: s0;
  s0 -> s0 0;
  s0 -> s0 1;
  s0 -> s0 G;
  s0 -> s0 S;
  accepting: s0;
}

T2 {
  init: s0;
  s0 -> s0 0/0;
  s0 -> s0 0/1;
  s0 -> s0 1/0;
  s0 -> s0 1/1;
  s0 -> s0 S/S;
  s0 -> s1 G/G;
  s0 -> s2 S/G;
  s1 -> s0 S/S;
  s1 -> s1 1/1;
  s1 -> s1 G/G;
  s1 -> s2 0/1;
  s2 -> s2 0/0;
  s2 -> s2 0/1;
  s2 -> s2 1/0;
  s2 -> s2 1/1;
  s2 -> s2 G/G;
  s2 -> s2 G/S;
  s2 -> s2 S/G;
  s2 -> s2 S/S;
  accepting: s2;
}


// Assumptions made (but not checked):
// * players move in alternation
// * from every reachable non-terminal configuration, exactly one
//   of the players can make a move
// * the game is symmetric under rotation

// Verifying solution for configurations of length 0 ... done
// Verifying solution for configurations of length 1 ... done
// Verifying solution for configurations of length 2 ... done
// Verifying solution for configurations of length 3 ... done
// Verifying solution for configurations of length 4 ... done
// Verifying solution for configurations of length 5 ... done
// Verifying solution for configurations of length 6 ... done
// Verifying solution for configurations of length 7 ... done
// Verifying solution for configurations of length 8 ... done
// Verifying solution for configurations of length 9 ... done
// Verifying solution for configurations of length 10 ... 